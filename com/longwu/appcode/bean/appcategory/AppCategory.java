// automatically generated by the FlatBuffers compiler, do not modify

package com.longwu.appcode.bean.appcategory;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class AppCategory extends Table {
  public static AppCategory getRootAsAppCategory(ByteBuffer _bb) { return getRootAsAppCategory(_bb, new AppCategory()); }
  public static AppCategory getRootAsAppCategory(ByteBuffer _bb, AppCategory obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public AppCategory __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public KeyValue map(int j) { return map(new KeyValue(), j); }
  public KeyValue map(KeyValue obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int mapLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }

  public static int createAppCategory(FlatBufferBuilder builder,
      int mapOffset) {
    builder.startObject(1);
    AppCategory.addMap(builder, mapOffset);
    return AppCategory.endAppCategory(builder);
  }

  public static void startAppCategory(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addMap(FlatBufferBuilder builder, int mapOffset) { builder.addOffset(0, mapOffset, 0); }
  public static int createMapVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMapVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endAppCategory(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishAppCategoryBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedAppCategoryBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }
}

