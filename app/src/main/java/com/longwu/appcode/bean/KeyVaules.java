package com.longwu.appcode.bean;// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class KeyVaules extends Table {
    public static void ValidateVersion() {
        Constants.FLATBUFFERS_23_3_3();
    }

    public static KeyVaules getRootAsKeyVaules(ByteBuffer _bb) {
        return getRootAsKeyVaules(_bb, new KeyVaules());
    }

    public static KeyVaules getRootAsKeyVaules(ByteBuffer _bb, KeyVaules obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        __reset(_i, _bb);
    }

    public KeyVaules __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public String packageName() {
        int o = __offset(4);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer packageNameAsByteBuffer() {
        return __vector_as_bytebuffer(4, 1);
    }

    public ByteBuffer packageNameInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 4, 1);
    }

    public String categoryId() {
        int o = __offset(6);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer categoryIdAsByteBuffer() {
        return __vector_as_bytebuffer(6, 1);
    }

    public ByteBuffer categoryIdInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 6, 1);
    }

    public static int createKeyVaules(FlatBufferBuilder builder,
                                      int packageNameOffset,
                                      int categoryIdOffset) {
        builder.startTable(2);
        KeyVaules.addCategoryId(builder, categoryIdOffset);
        KeyVaules.addPackageName(builder, packageNameOffset);
        return KeyVaules.endKeyVaules(builder);
    }

    public static void startKeyVaules(FlatBufferBuilder builder) {
        builder.startTable(2);
    }

    public static void addPackageName(FlatBufferBuilder builder, int packageNameOffset) {
        builder.addOffset(0, packageNameOffset, 0);
    }

    public static void addCategoryId(FlatBufferBuilder builder, int categoryIdOffset) {
        builder.addOffset(1, categoryIdOffset, 0);
    }

    public static int endKeyVaules(FlatBufferBuilder builder) {
        int o = builder.endTable();
        return o;
    }

    public static final class Vector extends BaseVector {
        public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) {
            __reset(_vector, _element_size, _bb);
            return this;
        }

        public KeyVaules get(int j) {
            return get(new KeyVaules(), j);
        }

        public KeyVaules get(KeyVaules obj, int j) {
            return obj.__assign(__indirect(__element(j), bb), bb);
        }
    }
}

